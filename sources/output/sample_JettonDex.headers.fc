;;
;; Header files for JettonDex
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $SwapRequest$_load
(slice, ((int, slice))) $SwapRequest$_load(slice sc_0) inline;

;; $AddJetton$_load
(slice, ((int))) $AddJetton$_load(slice sc_0) inline;

;; $JettonDex$_store
builder $JettonDex$_store(builder build_0, (slice, int, int, slice, slice) v) inline;

;; $JettonDex$_load
(slice, ((slice, int, int, slice, slice))) $JettonDex$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_sender
_ $Context$_get_sender((int, slice, int, slice) v) inline;

;; $JettonDex$init$_load
(slice, ((slice, slice, slice))) $JettonDex$init$_load(slice sc_0) inline;

;; $JettonDex$_contract_init
(slice, int, int, slice, slice) $JettonDex$_contract_init(slice $owner, slice $jettonAAddress, slice $jettonBAddress) impure inline_ref;

;; $JettonDex$_contract_load
(slice, int, int, slice, slice) $JettonDex$_contract_load() impure inline_ref;

;; $JettonDex$_contract_store
() $JettonDex$_contract_store((slice, int, int, slice, slice) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $JettonDex$_fun_addJetton
((slice, int, int, slice, slice), ()) $JettonDex$_fun_addJetton((slice, int, int, slice, slice) $self, int $v, slice $jetton) impure inline_ref;

;; $JettonDex$_fun_executeSwap
((slice, int, int, slice, slice), ()) $JettonDex$_fun_executeSwap((slice, int, int, slice, slice) $self, int $amount, slice $fromJetton) impure inline_ref;

;; $JettonDex$_fun_getJettonABalance
((slice, int, int, slice, slice), int) $JettonDex$_fun_getJettonABalance((slice, int, int, slice, slice) $self) impure inline_ref;

;; $JettonDex$_fun_getJettonBBalance
((slice, int, int, slice, slice), int) $JettonDex$_fun_getJettonBBalance((slice, int, int, slice, slice) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $JettonDex$_fun_forward
((slice, int, int, slice, slice), ()) $JettonDex$_fun_forward((slice, int, int, slice, slice) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $JettonDex$_fun_notify
((slice, int, int, slice, slice), ()) $JettonDex$_fun_notify((slice, int, int, slice, slice) $self, cell $body) impure inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
